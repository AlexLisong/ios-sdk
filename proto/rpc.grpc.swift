//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: rpc.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol Rpcpb_RpcServiceRpcGetVersionCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcGetVersionCallBase: ClientCallUnaryBase<Rpcpb_GetVersionRequest, Rpcpb_GetVersionResponse>, Rpcpb_RpcServiceRpcGetVersionCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetVersion" }
}

internal protocol Rpcpb_RpcServiceRpcGetBalanceCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcGetBalanceCallBase: ClientCallUnaryBase<Rpcpb_GetBalanceRequest, Rpcpb_GetBalanceResponse>, Rpcpb_RpcServiceRpcGetBalanceCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetBalance" }
}

internal protocol Rpcpb_RpcServiceRpcGetBlockchainInfoCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcGetBlockchainInfoCallBase: ClientCallUnaryBase<Rpcpb_GetBlockchainInfoRequest, Rpcpb_GetBlockchainInfoResponse>, Rpcpb_RpcServiceRpcGetBlockchainInfoCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetBlockchainInfo" }
}

internal protocol Rpcpb_RpcServiceRpcGetUTXOCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcGetUTXOCallBase: ClientCallUnaryBase<Rpcpb_GetUTXORequest, Rpcpb_GetUTXOResponse>, Rpcpb_RpcServiceRpcGetUTXOCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetUTXO" }
}

internal protocol Rpcpb_RpcServiceRpcGetBlocksCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcGetBlocksCallBase: ClientCallUnaryBase<Rpcpb_GetBlocksRequest, Rpcpb_GetBlocksResponse>, Rpcpb_RpcServiceRpcGetBlocksCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetBlocks" }
}

internal protocol Rpcpb_RpcServiceRpcGetBlockByHashCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcGetBlockByHashCallBase: ClientCallUnaryBase<Rpcpb_GetBlockByHashRequest, Rpcpb_GetBlockByHashResponse>, Rpcpb_RpcServiceRpcGetBlockByHashCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetBlockByHash" }
}

internal protocol Rpcpb_RpcServiceRpcGetBlockByHeightCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcGetBlockByHeightCallBase: ClientCallUnaryBase<Rpcpb_GetBlockByHeightRequest, Rpcpb_GetBlockByHeightResponse>, Rpcpb_RpcServiceRpcGetBlockByHeightCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetBlockByHeight" }
}

internal protocol Rpcpb_RpcServiceRpcSendTransactionCall: ClientCallUnary {}

fileprivate final class Rpcpb_RpcServiceRpcSendTransactionCallBase: ClientCallUnaryBase<Rpcpb_SendTransactionRequest, Rpcpb_SendTransactionResponse>, Rpcpb_RpcServiceRpcSendTransactionCall {
  override class var method: String { return "/rpcpb.RpcService/RpcSendTransaction" }
}

internal protocol Rpcpb_RpcServiceRpcGetNewTransactionsCall: ClientCallServerStreaming {
  /// Do not call this directly, call `receive()` in the protocol extension below instead.
  func _receive(timeout: DispatchTime) throws -> Rpcpb_GetNewTransactionsResponse?
  /// Call this to wait for a result. Nonblocking.
  func receive(completion: @escaping (ResultOrRPCError<Rpcpb_GetNewTransactionsResponse?>) -> Void) throws
}

internal extension Rpcpb_RpcServiceRpcGetNewTransactionsCall {
  /// Call this to wait for a result. Blocking.
  func receive(timeout: DispatchTime = .distantFuture) throws -> Rpcpb_GetNewTransactionsResponse? { return try self._receive(timeout: timeout) }
}

fileprivate final class Rpcpb_RpcServiceRpcGetNewTransactionsCallBase: ClientCallServerStreamingBase<Rpcpb_GetNewTransactionsRequest, Rpcpb_GetNewTransactionsResponse>, Rpcpb_RpcServiceRpcGetNewTransactionsCall {
  override class var method: String { return "/rpcpb.RpcService/RpcGetNewTransactions" }
}


/// Instantiate Rpcpb_RpcServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Rpcpb_RpcServiceService: ServiceClient {
  /// Synchronous. Unary.
  func rpcGetVersion(_ request: Rpcpb_GetVersionRequest) throws -> Rpcpb_GetVersionResponse
  /// Asynchronous. Unary.
  func rpcGetVersion(_ request: Rpcpb_GetVersionRequest, completion: @escaping (Rpcpb_GetVersionResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetVersionCall

  /// Synchronous. Unary.
  func rpcGetBalance(_ request: Rpcpb_GetBalanceRequest) throws -> Rpcpb_GetBalanceResponse
  /// Asynchronous. Unary.
  func rpcGetBalance(_ request: Rpcpb_GetBalanceRequest, completion: @escaping (Rpcpb_GetBalanceResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBalanceCall

  /// Synchronous. Unary.
  func rpcGetBlockchainInfo(_ request: Rpcpb_GetBlockchainInfoRequest) throws -> Rpcpb_GetBlockchainInfoResponse
  /// Asynchronous. Unary.
  func rpcGetBlockchainInfo(_ request: Rpcpb_GetBlockchainInfoRequest, completion: @escaping (Rpcpb_GetBlockchainInfoResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlockchainInfoCall

  /// Synchronous. Unary.
  func rpcGetUTXO(_ request: Rpcpb_GetUTXORequest) throws -> Rpcpb_GetUTXOResponse
  /// Asynchronous. Unary.
  func rpcGetUTXO(_ request: Rpcpb_GetUTXORequest, completion: @escaping (Rpcpb_GetUTXOResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetUTXOCall

  /// Synchronous. Unary.
  func rpcGetBlocks(_ request: Rpcpb_GetBlocksRequest) throws -> Rpcpb_GetBlocksResponse
  /// Asynchronous. Unary.
  func rpcGetBlocks(_ request: Rpcpb_GetBlocksRequest, completion: @escaping (Rpcpb_GetBlocksResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlocksCall

  /// Synchronous. Unary.
  func rpcGetBlockByHash(_ request: Rpcpb_GetBlockByHashRequest) throws -> Rpcpb_GetBlockByHashResponse
  /// Asynchronous. Unary.
  func rpcGetBlockByHash(_ request: Rpcpb_GetBlockByHashRequest, completion: @escaping (Rpcpb_GetBlockByHashResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlockByHashCall

  /// Synchronous. Unary.
  func rpcGetBlockByHeight(_ request: Rpcpb_GetBlockByHeightRequest) throws -> Rpcpb_GetBlockByHeightResponse
  /// Asynchronous. Unary.
  func rpcGetBlockByHeight(_ request: Rpcpb_GetBlockByHeightRequest, completion: @escaping (Rpcpb_GetBlockByHeightResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlockByHeightCall

  /// Synchronous. Unary.
  func rpcSendTransaction(_ request: Rpcpb_SendTransactionRequest) throws -> Rpcpb_SendTransactionResponse
  /// Asynchronous. Unary.
  func rpcSendTransaction(_ request: Rpcpb_SendTransactionRequest, completion: @escaping (Rpcpb_SendTransactionResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcSendTransactionCall

  /// Asynchronous. Server-streaming.
  /// Send the initial message.
  /// Use methods on the returned object to get streamed responses.
  func rpcGetNewTransactions(_ request: Rpcpb_GetNewTransactionsRequest, completion: ((CallResult) -> Void)?) throws -> Rpcpb_RpcServiceRpcGetNewTransactionsCall

}

internal final class Rpcpb_RpcServiceServiceClient: ServiceClientBase, Rpcpb_RpcServiceService {
  /// Synchronous. Unary.
  internal func rpcGetVersion(_ request: Rpcpb_GetVersionRequest) throws -> Rpcpb_GetVersionResponse {
    return try Rpcpb_RpcServiceRpcGetVersionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetVersion(_ request: Rpcpb_GetVersionRequest, completion: @escaping (Rpcpb_GetVersionResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetVersionCall {
    return try Rpcpb_RpcServiceRpcGetVersionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcGetBalance(_ request: Rpcpb_GetBalanceRequest) throws -> Rpcpb_GetBalanceResponse {
    return try Rpcpb_RpcServiceRpcGetBalanceCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetBalance(_ request: Rpcpb_GetBalanceRequest, completion: @escaping (Rpcpb_GetBalanceResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBalanceCall {
    return try Rpcpb_RpcServiceRpcGetBalanceCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcGetBlockchainInfo(_ request: Rpcpb_GetBlockchainInfoRequest) throws -> Rpcpb_GetBlockchainInfoResponse {
    return try Rpcpb_RpcServiceRpcGetBlockchainInfoCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetBlockchainInfo(_ request: Rpcpb_GetBlockchainInfoRequest, completion: @escaping (Rpcpb_GetBlockchainInfoResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlockchainInfoCall {
    return try Rpcpb_RpcServiceRpcGetBlockchainInfoCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcGetUTXO(_ request: Rpcpb_GetUTXORequest) throws -> Rpcpb_GetUTXOResponse {
    return try Rpcpb_RpcServiceRpcGetUTXOCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetUTXO(_ request: Rpcpb_GetUTXORequest, completion: @escaping (Rpcpb_GetUTXOResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetUTXOCall {
    return try Rpcpb_RpcServiceRpcGetUTXOCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcGetBlocks(_ request: Rpcpb_GetBlocksRequest) throws -> Rpcpb_GetBlocksResponse {
    return try Rpcpb_RpcServiceRpcGetBlocksCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetBlocks(_ request: Rpcpb_GetBlocksRequest, completion: @escaping (Rpcpb_GetBlocksResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlocksCall {
    return try Rpcpb_RpcServiceRpcGetBlocksCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcGetBlockByHash(_ request: Rpcpb_GetBlockByHashRequest) throws -> Rpcpb_GetBlockByHashResponse {
    return try Rpcpb_RpcServiceRpcGetBlockByHashCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetBlockByHash(_ request: Rpcpb_GetBlockByHashRequest, completion: @escaping (Rpcpb_GetBlockByHashResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlockByHashCall {
    return try Rpcpb_RpcServiceRpcGetBlockByHashCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcGetBlockByHeight(_ request: Rpcpb_GetBlockByHeightRequest) throws -> Rpcpb_GetBlockByHeightResponse {
    return try Rpcpb_RpcServiceRpcGetBlockByHeightCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetBlockByHeight(_ request: Rpcpb_GetBlockByHeightRequest, completion: @escaping (Rpcpb_GetBlockByHeightResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcGetBlockByHeightCall {
    return try Rpcpb_RpcServiceRpcGetBlockByHeightCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcSendTransaction(_ request: Rpcpb_SendTransactionRequest) throws -> Rpcpb_SendTransactionResponse {
    return try Rpcpb_RpcServiceRpcSendTransactionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcSendTransaction(_ request: Rpcpb_SendTransactionRequest, completion: @escaping (Rpcpb_SendTransactionResponse?, CallResult) -> Void) throws -> Rpcpb_RpcServiceRpcSendTransactionCall {
    return try Rpcpb_RpcServiceRpcSendTransactionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Asynchronous. Server-streaming.
  /// Send the initial message.
  /// Use methods on the returned object to get streamed responses.
  internal func rpcGetNewTransactions(_ request: Rpcpb_GetNewTransactionsRequest, completion: ((CallResult) -> Void)?) throws -> Rpcpb_RpcServiceRpcGetNewTransactionsCall {
    return try Rpcpb_RpcServiceRpcGetNewTransactionsCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}
internal protocol Rpcpb_AdminServiceRpcAddPeerCall: ClientCallUnary {}

fileprivate final class Rpcpb_AdminServiceRpcAddPeerCallBase: ClientCallUnaryBase<Rpcpb_AddPeerRequest, Rpcpb_AddPeerResponse>, Rpcpb_AdminServiceRpcAddPeerCall {
  override class var method: String { return "/rpcpb.AdminService/RpcAddPeer" }
}

internal protocol Rpcpb_AdminServiceRpcSendCall: ClientCallUnary {}

fileprivate final class Rpcpb_AdminServiceRpcSendCallBase: ClientCallUnaryBase<Rpcpb_SendRequest, Rpcpb_SendResponse>, Rpcpb_AdminServiceRpcSendCall {
  override class var method: String { return "/rpcpb.AdminService/RpcSend" }
}

internal protocol Rpcpb_AdminServiceRpcGetPeerInfoCall: ClientCallUnary {}

fileprivate final class Rpcpb_AdminServiceRpcGetPeerInfoCallBase: ClientCallUnaryBase<Rpcpb_GetPeerInfoRequest, Rpcpb_GetPeerInfoResponse>, Rpcpb_AdminServiceRpcGetPeerInfoCall {
  override class var method: String { return "/rpcpb.AdminService/RpcGetPeerInfo" }
}

internal protocol Rpcpb_AdminServiceRpcSendFromMinerCall: ClientCallUnary {}

fileprivate final class Rpcpb_AdminServiceRpcSendFromMinerCallBase: ClientCallUnaryBase<Rpcpb_SendFromMinerRequest, Rpcpb_SendFromMinerResponse>, Rpcpb_AdminServiceRpcSendFromMinerCall {
  override class var method: String { return "/rpcpb.AdminService/RpcSendFromMiner" }
}

internal protocol Rpcpb_AdminServiceRpcAddProducerCall: ClientCallUnary {}

fileprivate final class Rpcpb_AdminServiceRpcAddProducerCallBase: ClientCallUnaryBase<Rpcpb_AddProducerRequest, Rpcpb_AddProducerResponse>, Rpcpb_AdminServiceRpcAddProducerCall {
  override class var method: String { return "/rpcpb.AdminService/RpcAddProducer" }
}

internal protocol Rpcpb_AdminServiceRpcUnlockWalletCall: ClientCallUnary {}

fileprivate final class Rpcpb_AdminServiceRpcUnlockWalletCallBase: ClientCallUnaryBase<Rpcpb_UnlockWalletRequest, Rpcpb_UnlockWalletResponse>, Rpcpb_AdminServiceRpcUnlockWalletCall {
  override class var method: String { return "/rpcpb.AdminService/RpcUnlockWallet" }
}


/// Instantiate Rpcpb_AdminServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Rpcpb_AdminServiceService: ServiceClient {
  /// Synchronous. Unary.
  func rpcAddPeer(_ request: Rpcpb_AddPeerRequest) throws -> Rpcpb_AddPeerResponse
  /// Asynchronous. Unary.
  func rpcAddPeer(_ request: Rpcpb_AddPeerRequest, completion: @escaping (Rpcpb_AddPeerResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcAddPeerCall

  /// Synchronous. Unary.
  func rpcSend(_ request: Rpcpb_SendRequest) throws -> Rpcpb_SendResponse
  /// Asynchronous. Unary.
  func rpcSend(_ request: Rpcpb_SendRequest, completion: @escaping (Rpcpb_SendResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcSendCall

  /// Synchronous. Unary.
  func rpcGetPeerInfo(_ request: Rpcpb_GetPeerInfoRequest) throws -> Rpcpb_GetPeerInfoResponse
  /// Asynchronous. Unary.
  func rpcGetPeerInfo(_ request: Rpcpb_GetPeerInfoRequest, completion: @escaping (Rpcpb_GetPeerInfoResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcGetPeerInfoCall

  /// Synchronous. Unary.
  func rpcSendFromMiner(_ request: Rpcpb_SendFromMinerRequest) throws -> Rpcpb_SendFromMinerResponse
  /// Asynchronous. Unary.
  func rpcSendFromMiner(_ request: Rpcpb_SendFromMinerRequest, completion: @escaping (Rpcpb_SendFromMinerResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcSendFromMinerCall

  /// Synchronous. Unary.
  func rpcAddProducer(_ request: Rpcpb_AddProducerRequest) throws -> Rpcpb_AddProducerResponse
  /// Asynchronous. Unary.
  func rpcAddProducer(_ request: Rpcpb_AddProducerRequest, completion: @escaping (Rpcpb_AddProducerResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcAddProducerCall

  /// Synchronous. Unary.
  func rpcUnlockWallet(_ request: Rpcpb_UnlockWalletRequest) throws -> Rpcpb_UnlockWalletResponse
  /// Asynchronous. Unary.
  func rpcUnlockWallet(_ request: Rpcpb_UnlockWalletRequest, completion: @escaping (Rpcpb_UnlockWalletResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcUnlockWalletCall

}

internal final class Rpcpb_AdminServiceServiceClient: ServiceClientBase, Rpcpb_AdminServiceService {
  /// Synchronous. Unary.
  internal func rpcAddPeer(_ request: Rpcpb_AddPeerRequest) throws -> Rpcpb_AddPeerResponse {
    return try Rpcpb_AdminServiceRpcAddPeerCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcAddPeer(_ request: Rpcpb_AddPeerRequest, completion: @escaping (Rpcpb_AddPeerResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcAddPeerCall {
    return try Rpcpb_AdminServiceRpcAddPeerCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcSend(_ request: Rpcpb_SendRequest) throws -> Rpcpb_SendResponse {
    return try Rpcpb_AdminServiceRpcSendCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcSend(_ request: Rpcpb_SendRequest, completion: @escaping (Rpcpb_SendResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcSendCall {
    return try Rpcpb_AdminServiceRpcSendCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcGetPeerInfo(_ request: Rpcpb_GetPeerInfoRequest) throws -> Rpcpb_GetPeerInfoResponse {
    return try Rpcpb_AdminServiceRpcGetPeerInfoCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcGetPeerInfo(_ request: Rpcpb_GetPeerInfoRequest, completion: @escaping (Rpcpb_GetPeerInfoResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcGetPeerInfoCall {
    return try Rpcpb_AdminServiceRpcGetPeerInfoCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcSendFromMiner(_ request: Rpcpb_SendFromMinerRequest) throws -> Rpcpb_SendFromMinerResponse {
    return try Rpcpb_AdminServiceRpcSendFromMinerCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcSendFromMiner(_ request: Rpcpb_SendFromMinerRequest, completion: @escaping (Rpcpb_SendFromMinerResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcSendFromMinerCall {
    return try Rpcpb_AdminServiceRpcSendFromMinerCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcAddProducer(_ request: Rpcpb_AddProducerRequest) throws -> Rpcpb_AddProducerResponse {
    return try Rpcpb_AdminServiceRpcAddProducerCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcAddProducer(_ request: Rpcpb_AddProducerRequest, completion: @escaping (Rpcpb_AddProducerResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcAddProducerCall {
    return try Rpcpb_AdminServiceRpcAddProducerCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func rpcUnlockWallet(_ request: Rpcpb_UnlockWalletRequest) throws -> Rpcpb_UnlockWalletResponse {
    return try Rpcpb_AdminServiceRpcUnlockWalletCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func rpcUnlockWallet(_ request: Rpcpb_UnlockWalletRequest, completion: @escaping (Rpcpb_UnlockWalletResponse?, CallResult) -> Void) throws -> Rpcpb_AdminServiceRpcUnlockWalletCall {
    return try Rpcpb_AdminServiceRpcUnlockWalletCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

